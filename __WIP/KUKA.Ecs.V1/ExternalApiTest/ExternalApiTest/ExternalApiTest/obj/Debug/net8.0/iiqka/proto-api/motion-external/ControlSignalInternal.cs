// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: iiqka/proto-api/motion-external/control_signal_internal.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kuka.Motion.External {

  /// <summary>Holder for reflection information generated from iiqka/proto-api/motion-external/control_signal_internal.proto</summary>
  public static partial class ControlSignalInternalReflection {

    #region Descriptor
    /// <summary>File descriptor for iiqka/proto-api/motion-external/control_signal_internal.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ControlSignalInternalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj1paXFrYS9wcm90by1hcGkvbW90aW9uLWV4dGVybmFsL2NvbnRyb2xfc2ln",
            "bmFsX2ludGVybmFsLnByb3RvEhRrdWthLm1vdGlvbi5leHRlcm5hbBoraWlx",
            "a2EvcHJvdG8tYXBpL21vdGlvbi1leHRlcm5hbC91dGlscy5wcm90bxo4aWlx",
            "a2EvcHJvdG8tYXBpL21vdGlvbi1leHRlcm5hbC9jb250cm9sX2F0dHJpYnV0",
            "ZXMucHJvdG8aO2lpcWthL3Byb3RvLWFwaS9tb3Rpb24tZXh0ZXJuYWwvZXh0",
            "ZXJuYWxfY29udHJvbF9tb2RlLnByb3RvIoAFChVDb250cm9sU2lnbmFsSW50",
            "ZXJuYWwSEAoIc3RvcF9pcG8YASABKAgSOwoNam9pbnRfY29tbWFuZBgCIAEo",
            "CzIkLmt1a2EubW90aW9uLmV4dGVybmFsLkpvaW50UG9zaXRpb25zEjoKEWNh",
            "cnRlc2lhbl9jb21tYW5kGAMgASgLMh8ua3VrYS5tb3Rpb24uZXh0ZXJuYWwu",
            "VHJhbnNmb3JtEkUKFmpvaW50X3ZlbG9jaXR5X2NvbW1hbmQYBCABKAsyJS5r",
            "dWthLm1vdGlvbi5leHRlcm5hbC5Kb2ludFZlbG9jaXRpZXMSMgoNdHdpc3Rf",
            "Y29tbWFuZBgFIAEoCzIbLmt1a2EubW90aW9uLmV4dGVybmFsLlR3aXN0EkAK",
            "FGpvaW50X3RvcnF1ZV9jb21tYW5kGAYgASgLMiIua3VrYS5tb3Rpb24uZXh0",
            "ZXJuYWwuSm9pbnRUb3JxdWVzEjQKDndyZW5jaF9jb21tYW5kGAcgASgLMhwu",
            "a3VrYS5tb3Rpb24uZXh0ZXJuYWwuV3JlbmNoEk8KEGpvaW50X2F0dHJpYnV0",
            "ZXMYCCABKAsyNS5rdWthLm1vdGlvbi5leHRlcm5hbC5Kb2ludEltcGVkYW5j",
            "ZUNvbnRyb2xBdHRyaWJ1dGVzElcKFGNhcnRlc2lhbl9hdHRyaWJ1dGVzGAkg",
            "ASgLMjkua3VrYS5tb3Rpb24uZXh0ZXJuYWwuQ2FydGVzaWFuSW1wZWRhbmNl",
            "Q29udHJvbEF0dHJpYnV0ZXMSPwoMY29udHJvbF9tb2RlGAogASgOMikua3Vr",
            "YS5tb3Rpb24uZXh0ZXJuYWwuRXh0ZXJuYWxDb250cm9sTW9kZUKJAQoYY29t",
            "Lmt1a2EubW90aW9uLmV4dGVybmFsQhpDb250cm9sU2lnbmFsSW50ZXJuYWxQ",
            "cm90b1ABWjhnb2xhbmcucmQua3VrYS5jb20vbW90aW9uLWFwaS9wcm90by9r",
            "dWthL21vdGlvbi9leHRlcm5hbKoCFEt1a2EuTW90aW9uLkV4dGVybmFsYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kuka.Motion.External.UtilsReflection.Descriptor, global::Kuka.Motion.External.ControlAttributesReflection.Descriptor, global::Kuka.Motion.External.ExternalControlModeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kuka.Motion.External.ControlSignalInternal), global::Kuka.Motion.External.ControlSignalInternal.Parser, new[]{ "StopIpo", "JointCommand", "CartesianCommand", "JointVelocityCommand", "TwistCommand", "JointTorqueCommand", "WrenchCommand", "JointAttributes", "CartesianAttributes", "ControlMode" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Proto definition for external RT commands for internal usage on shared memory
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ControlSignalInternal : pb::IMessage<ControlSignalInternal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ControlSignalInternal> _parser = new pb::MessageParser<ControlSignalInternal>(() => new ControlSignalInternal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ControlSignalInternal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kuka.Motion.External.ControlSignalInternalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlSignalInternal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlSignalInternal(ControlSignalInternal other) : this() {
      stopIpo_ = other.stopIpo_;
      jointCommand_ = other.jointCommand_ != null ? other.jointCommand_.Clone() : null;
      cartesianCommand_ = other.cartesianCommand_ != null ? other.cartesianCommand_.Clone() : null;
      jointVelocityCommand_ = other.jointVelocityCommand_ != null ? other.jointVelocityCommand_.Clone() : null;
      twistCommand_ = other.twistCommand_ != null ? other.twistCommand_.Clone() : null;
      jointTorqueCommand_ = other.jointTorqueCommand_ != null ? other.jointTorqueCommand_.Clone() : null;
      wrenchCommand_ = other.wrenchCommand_ != null ? other.wrenchCommand_.Clone() : null;
      jointAttributes_ = other.jointAttributes_ != null ? other.jointAttributes_.Clone() : null;
      cartesianAttributes_ = other.cartesianAttributes_ != null ? other.cartesianAttributes_.Clone() : null;
      controlMode_ = other.controlMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControlSignalInternal Clone() {
      return new ControlSignalInternal(this);
    }

    /// <summary>Field number for the "stop_ipo" field.</summary>
    public const int StopIpoFieldNumber = 1;
    private bool stopIpo_;
    /// <summary>
    /// Flag for stopping external command handling through RT-channel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StopIpo {
      get { return stopIpo_; }
      set {
        stopIpo_ = value;
      }
    }

    /// <summary>Field number for the "joint_command" field.</summary>
    public const int JointCommandFieldNumber = 2;
    private global::Kuka.Motion.External.JointPositions jointCommand_;
    /// <summary>
    /// The externally calculated joint position command of a joint group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Kuka.Motion.External.JointPositions JointCommand {
      get { return jointCommand_; }
      set {
        jointCommand_ = value;
      }
    }

    /// <summary>Field number for the "cartesian_command" field.</summary>
    public const int CartesianCommandFieldNumber = 3;
    private global::Kuka.Motion.External.Transform cartesianCommand_;
    /// <summary>
    /// The externally calculated base to tcp transformation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Kuka.Motion.External.Transform CartesianCommand {
      get { return cartesianCommand_; }
      set {
        cartesianCommand_ = value;
      }
    }

    /// <summary>Field number for the "joint_velocity_command" field.</summary>
    public const int JointVelocityCommandFieldNumber = 4;
    private global::Kuka.Motion.External.JointVelocities jointVelocityCommand_;
    /// <summary>
    /// The externally calculated joint velocity command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Kuka.Motion.External.JointVelocities JointVelocityCommand {
      get { return jointVelocityCommand_; }
      set {
        jointVelocityCommand_ = value;
      }
    }

    /// <summary>Field number for the "twist_command" field.</summary>
    public const int TwistCommandFieldNumber = 5;
    private global::Kuka.Motion.External.Twist twistCommand_;
    /// <summary>
    /// The externally calculated cartesian velocity (twist) command for the current tcp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Kuka.Motion.External.Twist TwistCommand {
      get { return twistCommand_; }
      set {
        twistCommand_ = value;
      }
    }

    /// <summary>Field number for the "joint_torque_command" field.</summary>
    public const int JointTorqueCommandFieldNumber = 6;
    private global::Kuka.Motion.External.JointTorques jointTorqueCommand_;
    /// <summary>
    /// The externally calculated joint torque command of a joint group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Kuka.Motion.External.JointTorques JointTorqueCommand {
      get { return jointTorqueCommand_; }
      set {
        jointTorqueCommand_ = value;
      }
    }

    /// <summary>Field number for the "wrench_command" field.</summary>
    public const int WrenchCommandFieldNumber = 7;
    private global::Kuka.Motion.External.Wrench wrenchCommand_;
    /// <summary>
    /// The externally calculated wrench command of a joint group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Kuka.Motion.External.Wrench WrenchCommand {
      get { return wrenchCommand_; }
      set {
        wrenchCommand_ = value;
      }
    }

    /// <summary>Field number for the "joint_attributes" field.</summary>
    public const int JointAttributesFieldNumber = 8;
    private global::Kuka.Motion.External.JointImpedanceControlAttributes jointAttributes_;
    /// <summary>
    /// Joint impedance control attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Kuka.Motion.External.JointImpedanceControlAttributes JointAttributes {
      get { return jointAttributes_; }
      set {
        jointAttributes_ = value;
      }
    }

    /// <summary>Field number for the "cartesian_attributes" field.</summary>
    public const int CartesianAttributesFieldNumber = 9;
    private global::Kuka.Motion.External.CartesianImpedanceControlAttributes cartesianAttributes_;
    /// <summary>
    /// Cartesian impedance control attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Kuka.Motion.External.CartesianImpedanceControlAttributes CartesianAttributes {
      get { return cartesianAttributes_; }
      set {
        cartesianAttributes_ = value;
      }
    }

    /// <summary>Field number for the "control_mode" field.</summary>
    public const int ControlModeFieldNumber = 10;
    private global::Kuka.Motion.External.ExternalControlMode controlMode_ = global::Kuka.Motion.External.ExternalControlMode.Unspecified;
    /// <summary>
    /// The control mode for the command sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Kuka.Motion.External.ExternalControlMode ControlMode {
      get { return controlMode_; }
      set {
        controlMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ControlSignalInternal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ControlSignalInternal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StopIpo != other.StopIpo) return false;
      if (!object.Equals(JointCommand, other.JointCommand)) return false;
      if (!object.Equals(CartesianCommand, other.CartesianCommand)) return false;
      if (!object.Equals(JointVelocityCommand, other.JointVelocityCommand)) return false;
      if (!object.Equals(TwistCommand, other.TwistCommand)) return false;
      if (!object.Equals(JointTorqueCommand, other.JointTorqueCommand)) return false;
      if (!object.Equals(WrenchCommand, other.WrenchCommand)) return false;
      if (!object.Equals(JointAttributes, other.JointAttributes)) return false;
      if (!object.Equals(CartesianAttributes, other.CartesianAttributes)) return false;
      if (ControlMode != other.ControlMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StopIpo != false) hash ^= StopIpo.GetHashCode();
      if (jointCommand_ != null) hash ^= JointCommand.GetHashCode();
      if (cartesianCommand_ != null) hash ^= CartesianCommand.GetHashCode();
      if (jointVelocityCommand_ != null) hash ^= JointVelocityCommand.GetHashCode();
      if (twistCommand_ != null) hash ^= TwistCommand.GetHashCode();
      if (jointTorqueCommand_ != null) hash ^= JointTorqueCommand.GetHashCode();
      if (wrenchCommand_ != null) hash ^= WrenchCommand.GetHashCode();
      if (jointAttributes_ != null) hash ^= JointAttributes.GetHashCode();
      if (cartesianAttributes_ != null) hash ^= CartesianAttributes.GetHashCode();
      if (ControlMode != global::Kuka.Motion.External.ExternalControlMode.Unspecified) hash ^= ControlMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StopIpo != false) {
        output.WriteRawTag(8);
        output.WriteBool(StopIpo);
      }
      if (jointCommand_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(JointCommand);
      }
      if (cartesianCommand_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CartesianCommand);
      }
      if (jointVelocityCommand_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(JointVelocityCommand);
      }
      if (twistCommand_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TwistCommand);
      }
      if (jointTorqueCommand_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(JointTorqueCommand);
      }
      if (wrenchCommand_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(WrenchCommand);
      }
      if (jointAttributes_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(JointAttributes);
      }
      if (cartesianAttributes_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CartesianAttributes);
      }
      if (ControlMode != global::Kuka.Motion.External.ExternalControlMode.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ControlMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StopIpo != false) {
        output.WriteRawTag(8);
        output.WriteBool(StopIpo);
      }
      if (jointCommand_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(JointCommand);
      }
      if (cartesianCommand_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CartesianCommand);
      }
      if (jointVelocityCommand_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(JointVelocityCommand);
      }
      if (twistCommand_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TwistCommand);
      }
      if (jointTorqueCommand_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(JointTorqueCommand);
      }
      if (wrenchCommand_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(WrenchCommand);
      }
      if (jointAttributes_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(JointAttributes);
      }
      if (cartesianAttributes_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CartesianAttributes);
      }
      if (ControlMode != global::Kuka.Motion.External.ExternalControlMode.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ControlMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StopIpo != false) {
        size += 1 + 1;
      }
      if (jointCommand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JointCommand);
      }
      if (cartesianCommand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CartesianCommand);
      }
      if (jointVelocityCommand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JointVelocityCommand);
      }
      if (twistCommand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TwistCommand);
      }
      if (jointTorqueCommand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JointTorqueCommand);
      }
      if (wrenchCommand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WrenchCommand);
      }
      if (jointAttributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JointAttributes);
      }
      if (cartesianAttributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CartesianAttributes);
      }
      if (ControlMode != global::Kuka.Motion.External.ExternalControlMode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ControlMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ControlSignalInternal other) {
      if (other == null) {
        return;
      }
      if (other.StopIpo != false) {
        StopIpo = other.StopIpo;
      }
      if (other.jointCommand_ != null) {
        if (jointCommand_ == null) {
          JointCommand = new global::Kuka.Motion.External.JointPositions();
        }
        JointCommand.MergeFrom(other.JointCommand);
      }
      if (other.cartesianCommand_ != null) {
        if (cartesianCommand_ == null) {
          CartesianCommand = new global::Kuka.Motion.External.Transform();
        }
        CartesianCommand.MergeFrom(other.CartesianCommand);
      }
      if (other.jointVelocityCommand_ != null) {
        if (jointVelocityCommand_ == null) {
          JointVelocityCommand = new global::Kuka.Motion.External.JointVelocities();
        }
        JointVelocityCommand.MergeFrom(other.JointVelocityCommand);
      }
      if (other.twistCommand_ != null) {
        if (twistCommand_ == null) {
          TwistCommand = new global::Kuka.Motion.External.Twist();
        }
        TwistCommand.MergeFrom(other.TwistCommand);
      }
      if (other.jointTorqueCommand_ != null) {
        if (jointTorqueCommand_ == null) {
          JointTorqueCommand = new global::Kuka.Motion.External.JointTorques();
        }
        JointTorqueCommand.MergeFrom(other.JointTorqueCommand);
      }
      if (other.wrenchCommand_ != null) {
        if (wrenchCommand_ == null) {
          WrenchCommand = new global::Kuka.Motion.External.Wrench();
        }
        WrenchCommand.MergeFrom(other.WrenchCommand);
      }
      if (other.jointAttributes_ != null) {
        if (jointAttributes_ == null) {
          JointAttributes = new global::Kuka.Motion.External.JointImpedanceControlAttributes();
        }
        JointAttributes.MergeFrom(other.JointAttributes);
      }
      if (other.cartesianAttributes_ != null) {
        if (cartesianAttributes_ == null) {
          CartesianAttributes = new global::Kuka.Motion.External.CartesianImpedanceControlAttributes();
        }
        CartesianAttributes.MergeFrom(other.CartesianAttributes);
      }
      if (other.ControlMode != global::Kuka.Motion.External.ExternalControlMode.Unspecified) {
        ControlMode = other.ControlMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StopIpo = input.ReadBool();
            break;
          }
          case 18: {
            if (jointCommand_ == null) {
              JointCommand = new global::Kuka.Motion.External.JointPositions();
            }
            input.ReadMessage(JointCommand);
            break;
          }
          case 26: {
            if (cartesianCommand_ == null) {
              CartesianCommand = new global::Kuka.Motion.External.Transform();
            }
            input.ReadMessage(CartesianCommand);
            break;
          }
          case 34: {
            if (jointVelocityCommand_ == null) {
              JointVelocityCommand = new global::Kuka.Motion.External.JointVelocities();
            }
            input.ReadMessage(JointVelocityCommand);
            break;
          }
          case 42: {
            if (twistCommand_ == null) {
              TwistCommand = new global::Kuka.Motion.External.Twist();
            }
            input.ReadMessage(TwistCommand);
            break;
          }
          case 50: {
            if (jointTorqueCommand_ == null) {
              JointTorqueCommand = new global::Kuka.Motion.External.JointTorques();
            }
            input.ReadMessage(JointTorqueCommand);
            break;
          }
          case 58: {
            if (wrenchCommand_ == null) {
              WrenchCommand = new global::Kuka.Motion.External.Wrench();
            }
            input.ReadMessage(WrenchCommand);
            break;
          }
          case 66: {
            if (jointAttributes_ == null) {
              JointAttributes = new global::Kuka.Motion.External.JointImpedanceControlAttributes();
            }
            input.ReadMessage(JointAttributes);
            break;
          }
          case 74: {
            if (cartesianAttributes_ == null) {
              CartesianAttributes = new global::Kuka.Motion.External.CartesianImpedanceControlAttributes();
            }
            input.ReadMessage(CartesianAttributes);
            break;
          }
          case 80: {
            ControlMode = (global::Kuka.Motion.External.ExternalControlMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StopIpo = input.ReadBool();
            break;
          }
          case 18: {
            if (jointCommand_ == null) {
              JointCommand = new global::Kuka.Motion.External.JointPositions();
            }
            input.ReadMessage(JointCommand);
            break;
          }
          case 26: {
            if (cartesianCommand_ == null) {
              CartesianCommand = new global::Kuka.Motion.External.Transform();
            }
            input.ReadMessage(CartesianCommand);
            break;
          }
          case 34: {
            if (jointVelocityCommand_ == null) {
              JointVelocityCommand = new global::Kuka.Motion.External.JointVelocities();
            }
            input.ReadMessage(JointVelocityCommand);
            break;
          }
          case 42: {
            if (twistCommand_ == null) {
              TwistCommand = new global::Kuka.Motion.External.Twist();
            }
            input.ReadMessage(TwistCommand);
            break;
          }
          case 50: {
            if (jointTorqueCommand_ == null) {
              JointTorqueCommand = new global::Kuka.Motion.External.JointTorques();
            }
            input.ReadMessage(JointTorqueCommand);
            break;
          }
          case 58: {
            if (wrenchCommand_ == null) {
              WrenchCommand = new global::Kuka.Motion.External.Wrench();
            }
            input.ReadMessage(WrenchCommand);
            break;
          }
          case 66: {
            if (jointAttributes_ == null) {
              JointAttributes = new global::Kuka.Motion.External.JointImpedanceControlAttributes();
            }
            input.ReadMessage(JointAttributes);
            break;
          }
          case 74: {
            if (cartesianAttributes_ == null) {
              CartesianAttributes = new global::Kuka.Motion.External.CartesianImpedanceControlAttributes();
            }
            input.ReadMessage(CartesianAttributes);
            break;
          }
          case 80: {
            ControlMode = (global::Kuka.Motion.External.ExternalControlMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
